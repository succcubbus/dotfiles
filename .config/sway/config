# Default config for sway
#
# Copy this to ~/.config/sway/config and edit it to your liking.
#
# Read `man 5 sway` for a complete reference.

set $mod Mod4
set $left h
set $down j
set $up k
set $right l

set $term kitty
set $browser firefox

set $resize_step 25px

# default config
# output HDMI-A-1 resolution 1920x1080 position 1920,0

output * bg /home/kaiser/visuals/bg/power-landscape.jpg fill

output eDP-1 position 0,0
output DP-1 position 1920,0

default_border pixel

# idle configuration
#
# example configuration
#
#exec swayidle \
#    timeout 300 'swaylock -c 000000' \
#    timeout 600 'swaymsg "output * dpms off"' \
#       resume 'swaymsg "output * dpms on"' \
#    before-sleep 'swaylock -c 000000'

exec swayidle -w \
  timeout 120 'swaylock -f' \
  timeout 105 'notify-send -u critical -t 15000 swayidle "locking due to inactivity"' \
  timeout 120 'swaymsg "output * dpms off"' \
      resume 'swaymsg "output * dpms on"' \
  before-sleep 'swaylock -f'

# input configuration
#
# Example configuration:
#
#   input "2:14:SynPS/2_Synaptics_TouchPad" {
#       dwt enabled
#       tap enabled
#       natural_scroll enabled
#       middle_emulation enabled
#   }
#
# You can get the names of your inputs by running: swaymsg -t get_inputs
# Read `man 5 sway-input` for more information about this section.

input * {
    # keyboard
    xkb_layout de
    xkb_variant nodeadkeys
    xkb_options caps:escape,compose:menu
    xkb_numlock enabled

    # touchpad
    middle_emulation disabled
    dwt enabled
    tap enabled
    scroll_factor 1.33333
}

input "1102:4639:DELL0817:00_044E:121F_Touchpad" {
    natural_scroll enabled
}

# key bindings
bindsym $mod+Return exec $term
bindsym $mod+shift+f exec $browser
bindsym Alt+space fullscreen disable; exec albert toggle
bindsym Ctrl+Shift+l exec swaylock
bindsym $mod+Shift+q kill
bindsym $mod+d exec makoctl dismiss

floating_modifier $mod normal
# resize with right mouse button + $mod.

bindsym $mod+Shift+c reload
bindsym $mod+Shift+e exec swaymsg exit

# moving around
bindsym $mod+$left focus left
bindsym $mod+$down focus down
bindsym $mod+$up focus up
bindsym $mod+$right focus right
bindsym $mod+Left focus left
bindsym $mod+Down focus down
bindsym $mod+Up focus up
bindsym $mod+Right focus right

# move the focused window
bindsym $mod+Shift+$left move left
bindsym $mod+Shift+$down move down
bindsym $mod+Shift+$up move up
bindsym $mod+Shift+$right move right
bindsym $mod+Shift+Left move left
bindsym $mod+Shift+Down move down
bindsym $mod+Shift+Up move up
bindsym $mod+Shift+Right move right

# workspaces
bindsym $mod+1 workspace 1
bindsym $mod+2 workspace 2
bindsym $mod+3 workspace 3
bindsym $mod+4 workspace 4
bindsym $mod+5 workspace 5
bindsym $mod+6 workspace 6
bindsym $mod+7 workspace 7
bindsym $mod+8 workspace 8
bindsym $mod+9 workspace 9
bindsym $mod+0 workspace 10

# move focused container to workspace
bindsym $mod+Shift+1 move container to workspace 1
bindsym $mod+Shift+2 move container to workspace 2
bindsym $mod+Shift+3 move container to workspace 3
bindsym $mod+Shift+4 move container to workspace 4
bindsym $mod+Shift+5 move container to workspace 5
bindsym $mod+Shift+6 move container to workspace 6
bindsym $mod+Shift+7 move container to workspace 7
bindsym $mod+Shift+8 move container to workspace 8
bindsym $mod+Shift+9 move container to workspace 9
bindsym $mod+Shift+0 move container to workspace 10

# move workspace to different output
bindsym $mod+Ctrl+h move workspace to output left
bindsym $mod+Ctrl+j move workspace to output up
bindsym $mod+Ctrl+k move workspace to output down
bindsym $mod+Ctrl+l move workspace to output right

# layout stuff
# $mod+b or $mod+v, for horizontal and vertical splits
bindsym $mod+b splith
bindsym $mod+v splitv

# switch the current container between different layout styles
bindsym $mod+s layout stacking
bindsym $mod+w layout tabbed
bindsym $mod+e layout toggle split

# make the current focus fullscreen
bindsym $mod+f fullscreen
# toggle the current focus between tiling and floating mode
bindsym $mod+Shift+space floating toggle
# swap focus between the tiling area and the floating area
bindsym $mod+space focus mode_toggle
# move focus to the parent container
bindsym $mod+a focus parent

# move the currently focused window to the scratchpad
bindsym $mod+Shift+minus move scratchpad
# show the next scratchpad window or hide the focused scratchpad window
bindsym $mod+minus scratchpad show

# media keys
bindsym XF86AudioRaiseVolume exec pactl set-sink-volume $(pacmd list-sinks |awk '/* index:/{print $3}') +5%
bindsym XF86AudioLowerVolume exec pactl set-sink-volume $(pacmd list-sinks |awk '/* index:/{print $3}') -5%
bindsym XF86AudioMute exec pactl set-sink-mute $(pacmd list-sinks |awk '/* index:/{print $3}') toggle
bindsym XF86MonBrightnessDown exec brightnessctl set 10%-
bindsym XF86MonBrightnessUp exec brightnessctl set +10%
bindsym --release Print exec grim -g \"$(slurp)" "screenshot-$(date --iso-8601=seconds).png"

# resizing containers
mode "resize" {
    bindsym $left resize shrink width $resize_step
    bindsym $down resize grow height $resize_step
    bindsym $up resize shrink height $resize_step
    bindsym $right resize grow width $resize_step
    bindsym Left resize shrink width $resize_step
    bindsym Down resize grow height $resize_step
    bindsym Up resize shrink height $resize_step
    bindsym Right resize grow width $resize_step

    bindsym 5 resize set 50 ppt 0
    bindsym 3 resize set 33 ppt 0
    bindsym 6 resize set 66 ppt 0

    # return to default mode
    bindsym Return mode "default"
    bindsym Escape mode "default"
    bindsym $mod+$left mode "default"; focus left
    bindsym $mod+$down mode "default"; focus down
    bindsym $mod+$up mode "default"; focus up
    bindsym $mod+$right mode "default"; focus right
}
bindsym $mod+r mode "resize"

# status bar `man 5 sway-bar`
bar {
    position top
    mode hide
    modifier $mod+Alt
    font "Hack" 10
    colors {
        statusline #000000
        background #f8eadf
        focused_workspace #000000 #000000 #f8eadf
        inactive_workspace #f8eadf #f8eadf #000000
    }

    # when the status_command prints a new line to stdout, swaybar updates.
    status_command while true; do echo "$(upower -i /org/freedesktop/UPower/devices/battery_BAT0 | grep percent | awk '{ print $2 }') - $(date +'%a, %Y-%m-%d %H:%M:%S')"; sleep 1; done
}

# layout
gaps inner 15
smart_borders on

# colors
client.focused          #999999 #999999 #000000 #000000 #999999
client.unfocused        #222222 #222222 #f8eafd #000000 #222222
client.focused_inactive #222222 #222222 #f8eafd #000000 #222222

# allowed inactivity
for_window [app_id="firefox"] inhibit_idle fullscreen
for_window [app_id="mpv"] inhibit_idle fullscreen

# theme
exec gsettings set org.gnome.desktop.interface gtk-theme 'Adapta-Nokto'
exec gsettings set org.gnome.desktop.wm.preferences theme 'Adapta-Nokto'
exec gsettings set org.gnome.desktop.interface icon-theme 'Papirus-Dark'

# autostart
exec albert
exec mako
exec sh ~/.config/sway/battery-warn.sh
exec libinput-gestures-setup start
exec keepassxc

include /etc/sway/config.d/*
